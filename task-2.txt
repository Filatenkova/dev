Общие указания:
Количество запросов к базе должно быть минимальным.
Можно использовать битрикс как фреймворк. Или можно сделать без битрикса,
но в этом случае можно использовать только готовые компоненты (не фреймворки), например ORM,
подключая их через Composer.
Решение выложить в публичный репозиторий на github или bitbucket и прислать ссылку.
Код оформить в соответствие с требованиями PSR-2.
В коде должны присутствовать комментарии, разъясняющие реализацию.

Исходные данные:
Пользователи системы могут отмечать начало и окончание рабочего дня. Записи хранятся в таблице workday
Кроме того пользователь может приостановить рабочий день. Записи о приостановке хранятся в таблице workday_pause
Пользователи хранятся в таблице profile
Журнал опозданий - таблица lateness

Во все таблицы пишется время в часовом поясе сервера.
Пользователи могут находиться в разных часовых поясах.
Смещение часового пояса относительно UTC кратно часу, случаи смещения на пол часа не рассматриваем.

Задачи:
Реализовать механизм начала, остановки и приостановки рабочего дня
(только бизнес логику, графический интерфейс делать не нужно).
Написать скрипт, который будет выполняться по расписанию раз в час.
Скрипт должен автоматически завершать рабочий день пользователя в полночь по местному времени.
Написать скрипт, который будет выполняться по расписанию раз в час.
Скрипт должен проверять, начал ли пользователь рабочий день в 9-00 по местному времени.
Если не начал, записывать его в журнал опозданий.

// SQL запрос для создания таблиц из задачи
CREATE TABLE workday (
	id int PRIMARY KEY AUTO_INCREMENT,
	profile_id int NOT NULL, // id пользователя из таблицы profile
	date_start DATETIME NULL,
	date_stop DATETIME NULL
);

CREATE TABLE workday_pause (
	id int AUTO_INCREMENT PRIMARY KEY,
	workday_id int NOT NULL, // id рабочего дня из таблицы workday
	date_start DATETIME NULL,
	date_stop DATETIME NULL
);

CREATE TABLE profile (
	id int AUTO_INCREMENT PRIMARY KEY,
	login VARCHAR(255) NOT NULL,
	name VARCHAR(255) NULL,
	last_name VARCHAR(255) NULL,
	offset VARCHAR(10) NULL // смещение часового пояса в формате +0300
);

CREATE TABLE lateness (
	id int AUTO_INCREMENT PRIMARY KEY,
	profile_id int NOT NULL, // id пользователя из таблицы profile
	date DATE NOT NULL // дата опоздания
);
